cmake_minimum_required(VERSION 3.13)

# initialize pico-sdk from submodule
# note: this must happen before project()
include(pico-sdk/pico_sdk_init.cmake)

project(my_project)

# initialize the Raspberry Pi Pico SDK
pico_sdk_init()

# Add -O0 to remove optimizations when using gcc
IF(CMAKE_COMPILER_IS_GNUCC)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0")
ENDIF(CMAKE_COMPILER_IS_GNUCC)

if (TARGET tinyusb_device)

    add_executable(rp2040_tx
        src/tx.c
        src/nrf24l01.c
        src/lfsr.c
    )

    add_executable(rp2040_rx
        src/rx.c
        src/nrf24l01.c
        src/lfsr.c
    )

    # pull in common dependencies
    target_link_libraries(rp2040_tx pico_stdlib hardware_spi)
    target_link_libraries(rp2040_rx pico_stdlib hardware_spi)

    # enable usb output, disable uart output
    pico_enable_stdio_usb(rp2040_tx 1)
    pico_enable_stdio_uart(rp2040_tx 0)

    pico_enable_stdio_usb(rp2040_rx 1)
    pico_enable_stdio_uart(rp2040_rx 0)

    # create map/bin/hex/uf2 file etc.
    pico_add_extra_outputs(rp2040_tx)
    pico_add_extra_outputs(rp2040_rx)

elseif(PICO_ON_DEVICE)
    message(WARNING "not building hello_usb because TinyUSB submodule is not initialized in the SDK")
endif()